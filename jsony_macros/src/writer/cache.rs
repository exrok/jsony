use proc_macro::{Punct, Spacing};
pub static BLIT_SRC: &[u8] =
b"\xa6\x03\x07\n\t\x01\xa5\x01\x02\xbf\xb4\t\xa4\x04x\r\xbf\xb4\t\xa4\x04\x03\xc7\n\t\xd4\n\t\x8f\x01\n\t\xb4\r\xb8g\x98\t\x05\xcd\n\t#\n\t\x14\x03\x07\x0c\x01\xa2\xaaa\x04\r\xc2\xb8\x85\xc9\t\n\t\xcb\n\t\xbb\n\t\xab\x03\xd5\x01\x02\xd0\t\x05\n\t\xd0\n\t{\x03\x07\x0c\x01\xa2\n\ta\xc2\xb8\x82\xc9\t\n\t\xcb\n\t\xbb\n\t\xab\x03\xd5\x01\x02\xd0\t\x05\xcd\x0c\x01\n\t\xcb\n\tJ\n\t^\x03\xd5\x02\x05\x07w\n\t\xd4\n\t\xc5\n\ty\x01\xc2\xa6\n\t\x94\xa5\t\x94\x02\xb8l\x05\xc6\x02\xaf\t\x05\xcd\n\t\xd4\n\t\x13\n\t\xb9\xa5\n\t\xb9\x02\xaa\x91\x04\n\t\xb9\x01\n\t\x91\r\xb8\xc0\x05\xc6\x02\xd1\t\x05\xcd\xd4\n\t`\x0c\x01\xa2\n\t\x91\n\t\x94\x01\n\tl\n\tg\n\t\x8f\x03\x07\n\t\xc3\n\t.\n\t\x03\x05\xcd\n\t\xd4\n\t\xd0\n\t{\x03\x07\x02\xbe\x01\n\th\n\t\xc3\n\t2\n\t\x03\x07\x01\xd5\n\t\xc3\n\t\x16=\t\x02?\t\n\t\xcb\n\t\xb5\n\t\xa7\x08\x02\x97\t\n\t\xd4\n\t\xc3\n\t1\n\t\x03\n\t\xd4\n\t\xc3\n\t*\n\t\x03\x0e\xbb\t\n\t\xcb\n\t\xbb\n\t\xab\x03\xd5\x01\x0e\xd3\xca\t\xbb\x00\xc4\xd5\x00\xbc\n\t\xd4\n\t\xc3\n\t\x1f\n\t\xd4\n\t\xc3\n\t\x1c3\t\x05\x02-\t\x05\x02+\t\x05\xc7\n\t\xd4\n\t\x90\x03\x07\x01\x01\n\t\x82\x00\x81\xd1\x00\xb6\n\t\x9a\xc7\n\t\xd4\n\t\xb9\x01\n\t\xc0\x05\xc6\x00\xd1\x00M\xd5\r\xd1\x00\xb0\xd5\xd1\x00\x83\xd5\xd1\x00\xb0\xd5\r\xbd\x08p\x02\xca\x00:\xd5\xd3\xbe\t\n\t\xd4\n\t\xc5\n\tW\x04p\x00\xc0\r\xd1\x00v\xd5\r\xca\x00\xc0\r\xd1\x00\xb0\xd5\r\xd1\x00\x84\xd5\r\xd3\xbe\t\n\t\xd4\n\t\xc5\n\tV\x04\xd1\x00o\xd5\r\xd3d\x04\x0e\x0e\x0c\x01X\n\ti\xd5\rd\xd5\xd1\x00\xa9\xd5\r\xd1\x00\xb7\xd5\xbf\xc2\xb8}\x03\x07\x01\xd5\x0b\x01\n\t\xd4\n\t\xc3\n\t\xa1\x03\x07\n\t\xd4\n\t\xc3\n\t\xa1\n\t\x03\x07\x9c\t\x05\xbf\x02\x9e\t\n\t\xcb\n\t\x9d\n\t\x93\xd3\xcdb\x04\x03\xc7\n\t\xd4\n\t\xc5\n\tZ\x01\n\t\x85\xc9\x00\x81\x02\xd0\x02\xd3c\x04}\n\t\x03\x07\xc9\x02\xd0\x02\x05\xcdb\r\xbd\xd3\xd2\x04c\xcf\xd2\x00\xc4\n\t\x03\x01\xd5\x00\xbc\xd4\n\t\xc3\n\tY,\t\xc9\x02\xa8\t}\n\t\x03\x07\x01\xd5\x02$\t\x02H\t\xd4\n\t\xc3\n\tY\x03\x07\xc8\xc6\x06\x01\xd1\x00\xb7\xd5\r\xa2\n\t\x91\xd6\xaa\x95\r\xd3\xa8\x04\n\t\xd4\n\t\xc3\n\t\xa1\x9c\t\xbf\x02\x9e\t\n\t\xcb\n\t\x9d\n\t\x93\x02\r\xd3\xcd\xb2\x04\n\t\xcb\n\t\xb5\n\tz\n\t\x03\x95\x01\n\t\x8d\xd5\r\xd3\xcd\x8c\x04\n\t\xcb\n\t\xb5\n\tz\n\t\x03\x01\n\t\x8d\xd5\r\xd3\xcd\x9b\x04\x03\n\t\xcb\n\t\xbb\n\t\xab\n\t\x86\x8c\x00\x7f\xd5\x00\xc4\xd5\xd3\xcd\x9b\x04\xd4\n\t\xc3\n\t\x1dK\t\x02T\t\x9b\x04\xa8\x00\x97\xb2\x00\x7f\xd5\x00\xc4\xd5\x02\xd0\x02\xa3\x05\xcd\x9b\xd3\xa0\x04\xb2\x00\x80\xd5\r\xc9\x00\xc4\n\t\x03\t\xa0\x00\t\x8c\x00\x80\xd5\x02\x96\x07\xb1\r\xd3\xcd\xb2\x04\n\t\xcb\n\t\xb5\n\tz\n\t\x03\x95\x01\n\t\x8d\xd5\r\xbd\xd3\xd2\x02\xd0\x02\x92\x02\xd3m\x04\xc2\x05\x0f\xc1\xc7\x0f\xbf\x9f\r\xd3\x87\x04\xc8\x03\xc7\n\t\xd4\n\tQ\n\t\x18\x01\n\t6\x05\xcd\xd0\x00\"\x00(\x02m\x06\x01\xca\x02\xd2\x06\x01\xcf\xd2\xbd\x08\xad\x05\n\t\xd4\n\t\xba\n\t[\x04\xd0\x00\x8a\xd5\xc8\xd0\x00P\xd5\xd3\xca\x04\xc8\xc1\xbe\x06\x01\xbd\xad\t\x87\xc8\xd0\x00t\xd5\x05\xd4\n\t\xba\n\t\x1a\x02\xcc\xc1\x04r\r\'\r\xd3\xc1\x04\xc1\x00S\xd5\r\xd0\x00G\r\xcf\xd2\x05\n\t\xd4\n\t\xba\n\t\x1e\xd3\x8b\x04\xd0\x00\x8b\xd5\r\x07\xb1\t\xd0\x00I\x05\x8b\x05\n\t\xd4\n\t\xc5\n\tyq\t\xd3\xad\t\xa4\r\xd3\xc1\x04\xc8\xd0\x00\xca\x02n\xad\x04n\r\xca\xd3\xcc\xd5\x99\x05\n\t\xd4\n\t\xba\n\t\x15\x07\xb1\t<\xd0\x00j\xd5\xc8\xd0\x00j\xd5\x06\x01\xcf\xcc\x02\xce\x06\x01\xcb\n\t\xbb\n\tk\n\t\x03\xc9\x00\xc4\xd5\x00e\xd5\r\xcf\xce\xd3\xce\x04\xc8\xd0\x00t\xd5\x05\xd4\n\t\xba\n\t\x19\r\xcb\n\t\xbb\n\tk\n\t\x03\r\xcf\xce\r\xc8\xd0\x00@\xd5\n\t\xd4\n\t\xd0\n\t]\n\t\x1b\n\t\xd4\n\t\xd0\n\t]\n\t_\x06\x01\xc8\xc2\xd0\x00F\xd5\r\xcf\xcc\x05\xd4\n\t\xc5\n\ty\x8e\n\t\xcb\n\t\xb5\n\t\x89\x02\xa7\rf\x08\xc7\xd4\n\t\x89\n\t\x03\x01\xd5\x06\x04\xaf\x00C\x98\x00A\xd5\n\t\x90\x01\n\t\x82\xb3\xd7B\xb8R\x0c\x01\x05\x07w\x9f\n\t\xcb\n\t\x9f\n\t\x17\xa5\xaa\xd2\x04\n\t\xd4\n\t\xba\n\t|\r\xb85\xca\t\x05\x9f\x0c\x01^\x03\xa2\x02\n\t\xd4\n\t\xba\n\t|\x01\xc8\xca\xbe\x06\x01\xcf\xd2\xaf\x00\x88\xc8\x98\x00%\xd5&\n\tE\xbf\xbe\t\xd5\x04\x00D\x00\x83\xd5\r\n\t\xd4\n\t\xc5\n\t \n\t>\n\t\xd4\n\t\xc5\n\t\\\n\ts\n\t\xd4\n\t\xc5\n\t\x12\n\ts\x00\x84\xd5\r\xd3\xbe\t\n\t\xd4\n\t\xc5\n\t\x11\x04\x00;\xd5\r\x8e\n\t\xd4\n\t\xb9\r\xd3\xcdu\t\x05\xcd\n\t\xd4\n\t\xc5\n\t\\\x04\x04u\x008\xd5\r\x00L\xd5\r_\n\t4\x8e\n\t\xd4\n\t\xb9\r\xd3\xcd~\x04\xd4\n\t`\n\tU\x04\x05\xcd~\r~\x009\xd5";
pub const IDENT_SIZE: usize = 196;
pub static NAMES: [&str; 196] = [
    "AlwaysArray",
    "ArrayWriter",
    "BytesWriter",
    "Decoder",
    "EMPTY_OBJECT_FOR_EXTERNALLY_TAGGED_ENUM",
    "Field",
    "FromStr",
    "FromText",
    "MULTIPLE_FIELDS_FOR_EXTERNALLY_TAGGED_ENUM",
    "NO_FIELD_MATCHED_AN_ENUM_VARIANT",
    "Object",
    "ObjectSchemaInner",
    "SkipFieldVisitor",
    "UNKNOWN_VARIANT",
    "UnsafeReturn",
    "ValueWriter",
    "allow",
    "at",
    "binary",
    "bitset",
    "byte",
    "clippy",
    "continue",
    "ctx",
    "decode_with_alias",
    "default_default",
    "defaults",
    "destination",
    "drops",
    "emplace_json_for_with_attribute",
    "enter_object",
    "enter_seen_object",
    "erased_drop_in_place",
    "erased_emplace_from_json",
    "fields",
    "from",
    "from_str",
    "from_text",
    "in",
    "inner_writer",
    "into_string",
    "iter",
    "join_array_with_next_value",
    "loop",
    "name",
    "new",
    "offset",
    "peek",
    "pod_type",
    "pub",
    "push_as_bytes",
    "push_unchecked_ascii",
    "question_mark",
    "read_seen_string",
    "report_error",
    "required",
    "restore_for_retry",
    "result",
    "skipped_field",
    "smart_object_comma",
    "start_json_array",
    "tag_query_at_content_next_object",
    "tag_query_next_object",
    "take_string",
    "text",
    "to_str",
    "to_string",
    "visitor",
    "with_capacity",
    "AlwaysObject",
    "AlwaysString",
    "Default",
    "DynamicFieldDecoder",
    "FromJsonFieldVisitor",
    "MISSING_CONTENT_TAG",
    "ObjectWriter",
    "Peek",
    "Result",
    "String",
    "TextWriter",
    "Visitor",
    "__flatten_visitor_jsony",
    "__result",
    "__scope_jsony",
    "as_mut",
    "assert",
    "decode_binary",
    "decode_json",
    "default",
    "discard_remaining_object_fields",
    "drop_in_place",
    "encode_binary",
    "erased",
    "is_at_content",
    "join_object_with_next_value",
    "key",
    "message",
    "next_field",
    "non_terminating",
    "object_step",
    "object_writer",
    "push_colon",
    "static",
    "true",
    "DecodeError",
    "MaybeUninit",
    "Parser",
    "UnknownVariant",
    "__schema_inner",
    "_builder",
    "as_mut_ptr",
    "assume_init",
    "byte_add",
    "emplace_from_json",
    "end_json_array",
    "join_parent_json_value_with_next",
    "new_field_visitor",
    "new_unchecked",
    "other_tag",
    "push",
    "size_of",
    "skip_value",
    "snapshot",
    "temp_flatten",
    "uninit",
    "use",
    "FromBinary",
    "FromJson",
    "Kind",
    "None",
    "PhantomData",
    "ToBinary",
    "__TEMP",
    "break",
    "decode",
    "decoder",
    "else",
    "encode_json",
    "flatten_visitor",
    "inner",
    "marker",
    "phantom",
    "str",
    "temp2",
    "ObjectSchema",
    "Self",
    "Some",
    "bool",
    "for",
    "impl",
    "offset_of",
    "schema",
    "start_json_object",
    "type",
    "NonNull",
    "_err",
    "at_content",
    "automatically_derived",
    "encoder",
    "push_comma",
    "success",
    "temp",
    "where",
    "POD",
    "mem",
    "push_str",
    "end_json_object",
    "fn",
    "ToJson",
    "error",
    "ptr",
    "write",
    "if",
    "_",
    "const",
    "encode_json__jsony",
    "variant",
    "unsafe",
    "__internal",
    "cast",
    "json",
    "self",
    "as",
    "match",
    "dst",
    "value",
    "std",
    "Ok",
    "mut",
    "err",
    "return",
    "parser",
    "out",
    "Err",
    "let",
    "jsony",
];
pub const PUNCT_SIZE: usize = 17;
pub fn punct_cache_initial_state() -> [Punct; PUNCT_SIZE] {
    [
        Punct::new('.', Spacing::Alone),
        Punct::new('>', Spacing::Alone),
        Punct::new(',', Spacing::Alone),
        Punct::new('<', Spacing::Alone),
        Punct::new('=', Spacing::Alone),
        Punct::new('&', Spacing::Alone),
        Punct::new('=', Spacing::Joint),
        Punct::new('\'', Spacing::Joint),
        Punct::new('!', Spacing::Alone),
        Punct::new(':', Spacing::Alone),
        Punct::new(':', Spacing::Joint),
        Punct::new('#', Spacing::Joint),
        Punct::new('-', Spacing::Joint),
        Punct::new(';', Spacing::Alone),
        Punct::new('|', Spacing::Alone),
        Punct::new('*', Spacing::Alone),
        Punct::new('+', Spacing::Alone),
    ]
}
